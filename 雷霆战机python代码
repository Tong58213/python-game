import pygame
from pygame.locals import *
import random
import time
import copy

# 地图
class GameBackground:
    image1 = None
    image2 = None
    main_scene = None
    y1 = None
    y2 = None

    # 初始化地图
    def __init__(self, scene):
        self.image1 = pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/map.jpg")
        self.image2 = copy.copy(self.image1)
        self.main_scene = scene
        self.y1 = 0
        self.y2 = -self.main_scene.size[1]
    def action(self):
        self.y1 = self.y1 + 1
        self.y2 = self.y2 + 1
        if self.y1 >= self.main_scene.size[1]:
            self.y1 = 0
        if self.y2 >= 0:
            self.y2 = -self.main_scene.size[1]
    def draw(self):
        self.main_scene.scene.blit(self.image1, (0, self.y1))
        self.main_scene.scene.blit(self.image2, (0, self.y2))
class Bullet:
    speed = 10
    x = None
    y = None
    width = None
    hieght = None

    def __init__(self, x, y, w, h):
        self.x = x
        self.y = y
        self.width = w
        self.height = h

    def move(self):
        self.y -= self.speed
class EnemyBullet:
    speed = None
    x = None
    y = None
    width = None
    hieght = None
    def __init__(self, x, y, w, h):
        self.x = x
        self.y = y
        self.width = w
        self.height = h
        self.speed = random.randint(7, 15)

    def move(self):
        self.y += self.speed
class Plane:
    x = None
    y = None
    image = []
    main_scene = None
    speed = 8
    style = 0
    width = None
    height = None
    shoot_frequency = 0
    bullet_image = None
    bullets = []
    boom = None
    isHit = False

    def __init__(self, scene):
        self.image.append(pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/plane.png"))
        self.image.append(pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/plane_left.png"))
        self.image.append(pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/plane_right.png"))

        # 加载飞机子弹图片 #咋没子弹呢？？？？？
        self.bullet_image = pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/bullet.png")
        self.main_scene = scene
        self.x = self.main_scene.size[0] / 2 - self.image[self.style].get_width() / 2
        self.y = 600
        self.width = self.image[self.style].get_width()
        self.height = self.image[self.style].get_height()
    # 发射子弹
    def shoot(self):
        if self.shoot_frequency % 15 == 0:
            bullet_x = self.x + self.image[self.style].get_width() // 2 - self.bullet_image.get_width() // 2
            bullet_y = self.y - self.bullet_image.get_height() + 10
            b_w = self.bullet_image.get_width()
            b_h = self.bullet_image.get_height()
            self.bullets.append(Bullet(bullet_x, bullet_y, b_w, b_h))
            self.main_scene.bullet_sound.play()
        self.shoot_frequency += 1
        if self.shoot_frequency >= 15:
            self.shoot_frequency = 0
    # 绘制子弹
    def drawBullets(self):
        for b in self.bullets[:]:
            b.move()
            if b.y < 0:
                self.bullets.remove(b)
            self.main_scene.scene.blit(self.bullet_image, (b.x, b.y))
    # 向上
    def moveUp(self):
        if self.y > 0:
            self.y -= self.speed
    # 向下
    def moveDown(self):
        if self.y + self.image[self.style].get_height() < self.main_scene.size[1]:
            self.y += self.speed
    # 向左
    def moveLeft(self):
        if self.x > 0:
            self.x -= self.speed
    # 向右
    def moveRight(self):
        if self.x + self.image[self.style].get_width() < self.main_scene.size[0]:
            self.x += self.speed
    # 绘制飞机
    def draw(self):
        self.main_scene.scene.blit(self.image[self.style], (self.x, self.y))
    # 设置击中状态
    def setHit(self, hit):
        self.isHit = hit
        if hit:
            self.main_scene.game_music.stop()
            self.main_scene.over_sound.play()
        else:
            self.x = self.main_scene.size[0] / 2 - self.image[self.style].get_width() / 2
            self.y = 600
            self.bullets.clear()
# 敌机
class Enemy:
    image = None
    x = None
    y = None
    speed = 5
    width = None
    hieght = None
    def __init__(self, image, init_pos):
        self.image = image
        self.x = init_pos[0]
        self.y = init_pos[1]
        self.width = self.image.get_width()
        self.height = self.image.get_height()
    def move(self):
        self.y += self.speed
# 爆炸效果
class Boom:
    x = None
    y = None
    main_scene = None
    image_index = 0 # 效果图片播放索引
    def __init__(self, init_pos, scene):
        self.x = init_pos[0]
        self.y = init_pos[1]
        self.main_scene = scene
    def show(self, images):
        if self.image_index < len(images) - 1:
            self.main_scene.scene.blit(images[self.image_index], (self.x, self.y))
            self.image_index += 1
# 主场景
class MainScene:
    size = None
    scene = None
    bg = None
    plane = None
    timer = None
    running = True
    enemy_images = []
    enemies = []
    enemy_bullet = None
    enemy_bullets = []
    enemy_frequency = 0
    boom_images = []
    booms = []
    score = 0
    game_over_image = None
    boom_sound = None
    game_music = None
    bullet_sound = None
    enemy_bullet_sound = None
    over_sound = None
    # 初始化主场景
    def __init__(self):
        pygame.init()
        self.size = (458, 752)
        self.scene = pygame.display.set_mode([self.size[0], self.size[1]])
        pygame.display.set_caption("雷霆战机")
        self.timer = pygame.time.Clock()
        self.bg = GameBackground(self)
        
        self.plane = Plane(self)
       
        for n in range(4):
            self.enemy_images.append(pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/enemy/e_" + str(n + 1) + ".png"))
        
        self.enemy_bullet = pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/enemy_bullet.png")
        
        new_size = (self.enemy_bullet.get_width() // 2, self.enemy_bullet.get_height() // 2)
        self.enemy_bullet = pygame.transform.scale(self.enemy_bullet, new_size)
       
        for n in range(6):
            self.boom_images.append(pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/boom/b" + str(n + 1) + ".png"))

        self.game_over_image = pygame.image.load("/Users/dengmouren/Desktop/python素材/images/plane/gameover.png")
        
        self.game_music = pygame.mixer.Sound("/Users/dengmouren/Desktop/python素材/music/game_music.wav")
        self.boom_sound = pygame.mixer.Sound("/Users/dengmouren/Desktop/python素材/sounds/plane/boom.wav")
        self.bullet_sound = pygame.mixer.Sound("/Users/dengmouren/Desktop/python素材/sounds/plane/bullet.wav")
        self.enemy_bullet_sound = pygame.mixer.Sound("/Users/dengmouren/Desktop/python素材/sounds/plane/enemy_bullet.wav")
        self.over_sound = pygame.mixer.Sound("/Users/dengmouren/Desktop/python素材/sounds/plane/game_over.wav")
        self.game_music.play(-1)
    def reset(self):
        self.enemies.clear()
        self.booms.clear()
        self.enemy_bullets.clear()
        self.score = 0
        self.game_music.play(-1)
    def draw_elements(self):
        if not self.plane.isHit:
            self.bg.draw()           
            self.plane.draw()        
            self.plane.drawBullets() 
            for e in self.enemies:
                self.scene.blit(e.image, (e.x, e.y))
            for eb in self.enemy_bullets:
                self.scene.blit(self.enemy_bullet, (eb.x, eb.y))
            for b in self.booms[:]:
                b.show(self.boom_images)

                if b.image_index == len(self.boom_images) - 1:
                    self.booms.remove(b)
            font = pygame.font.Font("/Users/dengmouren/Desktop/python素材/fonts/katong.ttf", 30)
            text = font.render("分数：" + str(self.score), True, (255, 255, 255))
            text_rect = text.get_rect()
            text_rect.centerx = self.scene.get_rect().centerx
            text_rect.centery = 20
            self.scene.blit(text, text_rect)
        else:
            if not self.plane.boom:
                self.plane.boom = Boom([self.plane.x, self.plane.y], self)
            self.plane.boom.show(self.boom_images)

            if self.plane.boom.image_index == len(self.boom_images) - 1:
                font = pygame.font.Font("/Users/dengmouren/Desktop/python素材/fonts/katong.ttf", 30)
                text = font.render("本次得分："+ str(self.score), True, (255, 0, 0))
                text_rect = text.get_rect()
                text_rect.centerx = self.scene.get_rect().centerx
                text_rect.centery = self.scene.get_rect().centery + 24
                text2 = font.render("按下回车重新开始", True, (255, 0, 0))
                text_rect2 = text2.get_rect()
                text_rect2.centerx = self.scene.get_rect().centerx
                text_rect2.centery = self.scene.get_rect().centery + 200
                self.scene.blit(self.game_over_image, (0, 0))
                self.scene.blit(text, text_rect)
                self.scene.blit(text2, text_rect2)

    # 计算元素坐标及生成元素
    def action_elements(self):
        if not self.plane.isHit:
            self.bg.action()
            if self.enemy_frequency % 50 == 0:
                enemy_image = self.enemy_images[random.randint(0, len(self.enemy_images) - 1)]
                new_size = (enemy_image.get_width() // 2, enemy_image.get_height() // 2)
                enemy_image = pygame.transform.scale(enemy_image, new_size)
                enemy_pos = [random.randint(0, self.size[0] - enemy_image.get_width()), 0]
                enemy = Enemy(enemy_image, enemy_pos)
                self.enemies.append(enemy)
                ret = random.randint(1, 100)
                if ret >= 1 and ret <= 100:
                    w = self.enemy_bullet.get_width()
                    h = self.enemy_bullet.get_height()
                    b_x = enemy.x + enemy.width // 2 - w // 2
                    b_y = enemy.y + enemy.height
                    self.enemy_bullets.append(EnemyBullet(b_x, b_y, w, h))
                    self.enemy_bullet_sound.play()
            self.enemy_frequency += 1
            if self.enemy_frequency >= 100:
                self.enemy_frequency = 0
            # 计算敌机坐标
            for e in self.enemies[:]:
                e.move()
                if e.y > self.size[1]:
                    self.enemies.remove(e)

            # 计算敌机子弹坐标
            for eb in self.enemy_bullets[:]:
                eb.move()
                if eb.y > self.size[1]:
                    self.enemy_bullets.remove(eb)

    # 处理事件
    def handle_event(self):
        for event in pygame.event.get():
            # 检测松开键盘事件
            if event.type == pygame.KEYUP:
                if event.key == K_LEFT or event.key == K_RIGHT:
                    self.plane.style = 0
            # 检测到事件为退出时
            if event.type == pygame.QUIT:
                self.running = False
    # 碰撞检测
    def detect_collision(self):
        if not self.plane.isHit:
            for e in self.enemies[:]:
                # 敌机是否被飞机子弹击中
                for b in self.plane.bullets[:]:
                    if self.collision(e, b) or self.collision(b, e):
                        self.enemies.remove(e)
                        self.plane.bullets.remove(b)
                        self.booms.append(Boom([e.x, e.y], self))
                        self.score += 1
                        self.boom_sound.play()
                if  self.collision(e, self.plane) or self.collision(self.plane, e):
                    self.plane.setHit(True)
                    break
            for eb in self.enemy_bullets[:]:
                if self.collision(eb, self.plane) or self.collision(self.plane, eb):
                    self.plane.setHit(True)
                    break
    def collision(self, a, b):
        temp1 = (b.x <= a.x + a.width <= b.x + b.width)
        temp2 = (b.y <= a.y + a.height <= b.y + b.height)
        return temp1 and temp2
    def key_pressed(self):
        key_pressed = pygame.key.get_pressed()

        if not self.plane.isHit:
            if key_pressed[K_UP]:
                self.plane.moveUp()
            if key_pressed[K_DOWN]:
                self.plane.moveDown()
            if key_pressed[K_LEFT]:
                self.plane.style = 1
                self.plane.moveLeft()
            if key_pressed[K_RIGHT]:
                self.plane.style = 2
                self.plane.moveRight()
            if key_pressed[K_SPACE]:
                self.plane.shoot()
        else:
            if key_pressed[K_RETURN]:
                self.plane.setHit(False)
                self.reset()
    def set_fps(self):
        pygame.display.update()
        self.timer.tick(60)
    def run_scene(self):
        while self.running:
            self.action_elements()
            self.draw_elements()            
            self.handle_event()         
           self.detect_collision()     
            self.key_pressed()
   
            self.set_fps()
mainScene = MainScene()
mainScene.run_scene()
